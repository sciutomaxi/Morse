###
 #  summary: Translate code morse to human
 #  consumes: ["application/json"]
 #  produces: ["application/json"]
 #  parameters:
 #    - in: "body"
 #      name: "body"
 #      description: "e.g: {\"text\":\".... --- .-.. .-\"}"
 #      required: true
 #      content:
 #        application/json:
 #        schema:
 #         $ref: '#/definitions/RequestMorse'
 #      schema:
 #        $ref: '#/definitions/RequestMorse'
 #  responses:
 #    400:
 #      description: "Invalid input"
 #    200:
 #      description: "Success"
 #      content:
 #        application/json:
 #          schema:
 #            $ref: '#/definitions/models.ResponseMorse'
 ###
POST /translate/2text                           controllers.TranslateController.translate2Human

###
 #  summary: Translate alfa to code morse
 #  consumes: ["application/json"]
 #  produces: ["application/json"]
 #  parameters:
 #    - in: "body"
 #      name: "body"
 #      description: "e.g: {\"text\":\"hola\"}"
 #      required: true
 #      content:
 #        application/json:
 #        schema:
 #         $ref: '#/definitions/RequestText'
 #      schema:
 #        $ref: '#/definitions/RequestText'
 #  responses:
 #    400:
 #      description: "Invalid input"
 #    200:
 #      description: "Success"
 #      content:
 #        application/json:
 #          schema:
 #            $ref: '#/definitions/models.ResponseMorse'
 ###
POST /translate/2morse                          controllers.TranslateController.toAlfaToMorse

###
 #  summary: Translate bits to code morse
 #  consumes: ["application/json"]
 #  produces: ["application/json"]
 #  parameters:
 #    - in: "body"
 #      name: "body"
 #      description: "e.g: {\"text\":\"001100110101000\"}"
 #      required: true
 #      content:
 #        application/json:
 #        schema:
 #         $ref: '#/definitions/RequestBits'
 #      schema:
 #        $ref: '#/definitions/RequestBits'
 #  responses:
 #    400:
 #      description: "Invalid input"
 #    200:
 #      description: "Success"
 #      content:
 #        application/json:
 #          schema:
 #            $ref: '#/definitions/models.ResponseMorse'
 ###
POST /translate/binaryToMorse                   controllers.TranslateController.decodeBits2Morse

### NoDocs ###
GET   /docs/swagger-ui/*file        controllers.Assets.at(path:String="/public/lib/swagger-ui", file:String)

### NoDocs ###
GET   /assets/*file                 controllers.Assets.versioned(path="/public", file: Asset)